Assn 10 plan


# Define all functions
def setup():
    import turtle
    turtle.penup()
    turtle.speed(150)
    turtle.screensize (1000,800)
    import random
    global colors
    colors = ("red", "green", "purple", "blue", "yellow", "pink", "black", "orange", "deep sky blue", "medium spring green",
        "coral", "indian red", "gold", "lemon chiffon", "dark cyan", "olive drab", "dark turquoise", "dodger blue", "alice blue",
        "pale goldenrod", "royal blue", "light gray", "cadet blue", "light salmon", "rosy brown", "deep pink", "antique white",
        "plum", "seashell")



def drawRectangle (height=50, width=50):
    for i in range (2):
        turtle.forward (width)
        turtle.left (90)
        turtle.forward (height)
        turtle.left (90)

def drawRectanglePattern (centerX, centerY, offset, width, height, count, rotation):
    for j in range (count):
        color = random.choice(colors)
        turtle.color (color)
        turtle.goto (centerX, centerY)
        turtle.forward (offset)
        turtle.left (rotation)
        turtle.pendown()
        drawRectangle (height, width)
        turtle.penup ()
        turtle.right(rotation)
        turtle.goto (centerX, centerY)
        turtle.left (360 / count)

def drawCirclePattern (centerX, centerY, offset, radius, count):
    for i in range (count):
        color = random.choice(colors)
        turtle.color (color)
        turtle.goto (centerX, centerY)
        turtle.forward (offset)
        turtle.pendown()
        turtle.circle (radius)
        turtle.penup ()
        turtle.goto (centerX, centerY)
        turtle.left (360 / count)

def drawSuperPattern (patternNumber):

    for i in range (patternNumber):
        centerX = random.randint(-500, 500)
        centerY = random.randint(-400, 400)
        offset = random.randint(-100, 100)
        radius = random.randint(-100, 100)
        rotation = random.randint(-90, 90)
        width = random.randint(-100, 100)
        height = random.randint(-100, 100)
        count = random.randint(-100, 100)
        super = random.randint (0,1)
        if super == 0:
            turtle.penup ()
            drawRectanglePattern(centerX, centerY,offset, width, height, count, rotation)
        elif super == 1:
            turtle.penup()
            drawCirclePattern(centerX, centerY, offset, radius, count)



def reset ():
    turtle.reset ()

def done ():
    turtle.done()

#Plug em into the given assn 10 code


import pattern


def main ():
    pattern.setup ()

    playAgain = True

    while playAgain:
        print("Choose a mode")
        print("1) Rectangle Pattern")
        print("2) Circle Pattern")
        print("3) Super Pattern")
        mode = eval(input("Which mode do you want to play? 1, 2 or 3: "))

        if mode == 1:
            centerX = eval(input("Enter center x position:"))
            centerY = eval(input("Enter center y position:"))
            offset = eval(input("Enter offset:"))
            width = eval(input("Enter rectangle width:"))
            height = eval(input("Enter rectangle height:"))
            count = eval(input("Enter number of rectangles:"))
            rotation = eval(input("Enter the rotation of each rectangle:"))
            pattern.drawRectanglePattern(centerX ,centerY, offset, width, height, count, rotation)


        elif mode == 2:
            centerX = eval(input("Enter center x position:"))
            centerY = eval(input("Enter center y position:"))
            offset = eval(input("Enter offset:"))
            radius = eval(input("Enter circle radius:"))
            count = eval(input("Enter number of circles:"))
            pattern.drawCirclePattern(centerX, centerY, offset, radius, count)


        elif mode == 3:
            patternNumber = eval(input("Enter number of patterns:"))

            pattern.drawSuperPattern(patternNumber)




        print()
        print("Do you want to play again?")
        print("1) Yes, and keep drawings")
        print("2) Yes, and clear drawings")
        print("3) No, I am all done")
        response = eval(input("Choose 1, 2, or 3: "))

        if response == 1:
            playAgain = True

        elif response == 2:
            pattern.reset()
            playAgain = True

        elif response == 3:
            break

    print ("Thanks for playing!")
    pattern.done()
main()